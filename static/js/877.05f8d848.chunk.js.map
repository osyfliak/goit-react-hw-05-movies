{"version":3,"file":"static/js/877.05f8d848.chunk.js","mappings":"wQAOaA,EAAO,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBJ,GAFrB,OAERK,EAFQ,OAGdN,EAAQM,EAAKP,MAHC,gDAKdQ,QAAQC,IAAR,MACAC,EAAAA,OAAAA,OAAc,aANA,yDAAH,qDAUfL,GACD,GAAE,CAACH,KAGF,eAAIS,UAAU,mCAAd,SACGX,EAAKY,KAAI,SAAAC,GAAI,OACZ,2BACE,gBACEF,UAAU,eACVG,IAAG,UAAKC,EAAAA,IAAL,OAAeF,EAAKG,cACvBC,IAAKJ,EAAKK,QAEZ,cAAGP,UAAU,aAAb,SAA2BE,EAAKK,SANzBL,EAAKM,GADF,KAYnB,C,sNCrCYJ,EAAU,kCAEjBK,EAAeC,EAAAA,EAAAA,OAAa,CAChCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPL,EAAaM,IAAI,sBADV,uBACtBnB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBoB,EAAc,mCAAI,WAAMJ,GAAN,yFACNH,EAAaM,IAAI,gBAAiB,CAAEH,OAAAA,IAD9B,uBACrBhB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAJ,sDAKdqB,EAAe,mCAAI,WAAMT,GAAN,yFACPC,EAAaM,IAAb,iBAA2BP,IADpB,uBACtBZ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,sDAKfD,EAAe,mCAAI,WAAMa,GAAN,yFACPC,EAAaM,IAAb,iBAA2BP,EAA3B,aADO,uBACtBZ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,sDAKfsB,EAAe,mCAAI,WAAMV,GAAN,yFACPC,EAAaM,IAAb,iBAA2BP,EAA3B,aADO,uBACtBZ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,qD","sources":["components/Cast/Cast.jsx","services/movieAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { getMovieCredits } from 'services/movieAPI';\nimport { IMG_URL } from 'services/movieAPI';\n\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const data = await getMovieCredits(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n        Notify.failed('No detals');\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <ul className=\"row row-cols-1 row-cols-md-5 g-5\">\n      {cast.map(item => (\n        <li key={item.id}>\n          <img\n            className=\"card-img-top\"\n            src={`${IMG_URL}${item.profile_path}`}\n            alt={item.name}\n          />\n          <p className=\"card-title\">{item.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n","import axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst movieService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '4bf39acf6ebeb7cbbfc54c4c8bc42fdc',\n  },\n});\n\nexport const getMovieTrending = async () => {\n  const { data } = await movieService.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieSearch  = async params => {\n  const { data } = await movieService.get('/search/movie', { params });\n  return data;\n};\n\nexport const getMovieDetails  = async id => {\n  const { data } = await movieService.get(`/movie/${id}` );\n  return data;\n};\n\nexport const getMovieCredits  = async id => {\n  const { data } = await movieService.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews  = async id => {\n  const { data } = await movieService.get(`/movie/${id}/reviews`);\n  return data;\n};"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","movieCast","getMovieCredits","data","console","log","Notify","className","map","item","src","IMG_URL","profile_path","alt","name","id","movieService","axios","baseURL","params","api_key","getMovieTrending","get","getMovieSearch","getMovieDetails","getMovieReviews"],"sourceRoot":""}