{"version":3,"file":"static/js/122.5511aee3.chunk.js","mappings":"wQAKaA,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEC,EAAAA,EAAAA,IAAgBJ,GAFlB,OAEXK,EAFW,OAGjBN,EAAWM,EAAKC,SAHC,gDAKjBC,QAAQC,IAAR,MACAC,EAAAA,OAAAA,OAAc,aANG,yDAAH,qDAUlBN,GACD,GAAE,CAACH,KAGF,+BACE,wBACGF,EAAQY,KAAI,SAAAC,GAAM,OACjB,yBACE,iBAAKC,MAAM,MAAX,WACE,gBAAKA,MAAM,QAAX,UACE,gBAAKC,GAAG,eAAeD,MAAM,aAA7B,UACE,eACEA,MAAM,yCACNE,KAAK,eAFP,qBAIWH,EAAOI,eAItB,gBAAKH,MAAM,QAAX,UACE,iBACE,cAAY,SACZ,iBAAe,gBACf,wBAAsB,OACtBA,MAAM,oBACNI,SAAS,IALX,WAOE,gBAAIH,GAAG,cAAP,qBAA8BF,EAAOI,WACrC,uBAAIJ,EAAOM,mBArBVN,EAAOE,GADC,OA+B1B,C,sNCvDYK,EAAU,kCAEjBC,EAAeC,EAAAA,EAAAA,OAAa,CAChCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPL,EAAaM,IAAI,sBADV,uBACtBpB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBqB,EAAc,mCAAI,WAAMJ,GAAN,yFACNH,EAAaM,IAAI,gBAAiB,CAAEH,OAAAA,IAD9B,uBACrBjB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAJ,sDAKdsB,EAAe,mCAAI,WAAMd,GAAN,yFACPM,EAAaM,IAAb,iBAA2BZ,IADpB,uBACtBR,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,sDAKfuB,EAAe,mCAAI,WAAMf,GAAN,yFACPM,EAAaM,IAAb,iBAA2BZ,EAA3B,aADO,uBACtBR,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,sDAKfD,EAAe,mCAAI,WAAMS,GAAN,yFACPM,EAAaM,IAAb,iBAA2BZ,EAA3B,aADO,uBACtBR,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,qD","sources":["components/Reviews/Reviews.jsx","services/movieAPI.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movieAPI';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const data = await getMovieReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n        Notify.failed('No detals');\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <div class=\"row\">\n              <div class=\"col-4\">\n                <div id=\"list-example\" class=\"list-group\">\n                  <a\n                    class=\"list-group-item list-group-item-action\"\n                    href=\"#list-item-4\"\n                  >\n                    Author: {review.author}\n                  </a>\n                </div>\n              </div>\n              <div class=\"col-8\">\n                <div\n                  data-bs-spy=\"scroll\"\n                  data-bs-target=\"#list-example\"\n                  data-bs-smooth-scroll=\"true\"\n                  class=\"scrollspy-example\"\n                  tabindex=\"0\"\n                >\n                  <h4 id=\"list-item-1\">Author: {review.author}</h4>\n                  <p>{review.content}</p>\n                </div>\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst movieService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '4bf39acf6ebeb7cbbfc54c4c8bc42fdc',\n  },\n});\n\nexport const getMovieTrending = async () => {\n  const { data } = await movieService.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieSearch  = async params => {\n  const { data } = await movieService.get('/search/movie', { params });\n  return data;\n};\n\nexport const getMovieDetails  = async id => {\n  const { data } = await movieService.get(`/movie/${id}` );\n  return data;\n};\n\nexport const getMovieCredits  = async id => {\n  const { data } = await movieService.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews  = async id => {\n  const { data } = await movieService.get(`/movie/${id}/reviews`);\n  return data;\n};"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","movieReviews","getMovieReviews","data","results","console","log","Notify","map","review","class","id","href","author","tabindex","content","IMG_URL","movieService","axios","baseURL","params","api_key","getMovieTrending","get","getMovieSearch","getMovieDetails","getMovieCredits"],"sourceRoot":""}