{"version":3,"file":"static/js/318.55b329ea.chunk.js","mappings":"gRAGaA,EAAsB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAExCC,EAF+D,EAAbC,OAEhCC,KAAI,SAAAC,GAAK,OAC7B,yBAAmB,cAAGC,UAAU,YAAb,SAA0BD,EAAME,QAA1CF,EAAMG,GADc,IAGnC,OACE,+BACE,gBAAKF,UAAU,kBAAf,UACE,iBAAKA,UAAU,MAAf,WACE,gBAAKA,UAAU,WAAf,UACE,gBAAKP,IAAG,UAAKU,EAAAA,IAAL,OAAeV,GAAOO,UAAU,6BAA6BI,IAAI,SAE3E,gBAAKJ,UAAU,WAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,SAA4BN,KAC5B,eAAIM,UAAU,aAAd,wBACA,eAAGA,UAAU,YAAb,cAA2BL,MAC3B,wBAAKC,eAOlB,ECpBD,EALe,WAAO,IAAD,IACbS,GAAWC,EAAAA,EAAAA,MACjB,OAAO,SAAC,KAAD,CAAON,UAAU,kBAAkBO,GAAE,oBAAEF,EAASG,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA/D,oBACR,ECEYC,EAAc,WAAO,IAAD,IAC/B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFT,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAU,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAgBJ,GAFnB,OAEVK,EAFU,OAGhBN,EAASM,GAHO,gDAKhBC,QAAQC,IAAR,MACAC,EAAAA,OAAAA,OAAc,aANE,yDAAH,qDAUjBL,GACD,GAAE,CAACH,KAIF,iCACE,SAAC,EAAD,IACCF,IAAS,SAACpB,EAAD,CACRC,IAAKmB,EAAMW,YACX7B,MAAOkB,EAAMlB,MACbC,SAAUiB,EAAMjB,SAChBE,OAAQe,EAAMf,UAEhB,SAAC,KAAD,CAAMW,MAAO,CAAEC,MAAM,UAAAJ,EAASG,aAAT,eAAgBC,OAAQJ,GAAYE,GAAG,OAA5D,UAEA,mBAAQP,UAAU,8BAAlB,qBAEA,SAAC,KAAD,CAAMQ,MAAO,CAAEC,MAAM,UAAAJ,EAASG,aAAT,eAAgBC,OAAQJ,GAAYE,GAAG,SAA5D,UACE,mBAAQP,UAAU,2BAAlB,wBAEF,SAAC,EAAAwB,SAAD,CAAUC,UAAU,8HAApB,UACE,SAAC,KAAD,QAIP,C,sNC/CYtB,EAAU,kCAEjBuB,EAAeC,EAAAA,EAAAA,OAAa,CAChCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPL,EAAaM,IAAI,sBADV,uBACtBb,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBc,EAAc,mCAAI,WAAMJ,GAAN,yFACNH,EAAaM,IAAI,gBAAiB,CAAEH,OAAAA,IAD9B,uBACrBV,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAJ,sDAKdD,EAAe,mCAAI,WAAMhB,GAAN,yFACPwB,EAAaM,IAAb,iBAA2B9B,IADpB,uBACtBiB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,sDAKfe,EAAe,mCAAI,WAAMhC,GAAN,yFACPwB,EAAaM,IAAb,iBAA2B9B,EAA3B,aADO,uBACtBiB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,sDAKfgB,EAAe,mCAAI,WAAMjC,GAAN,yFACPwB,EAAaM,IAAb,iBAA2B9B,EAA3B,aADO,uBACtBiB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,qD","sources":["components/MovieDetalComponent/MovieDetalComponent.jsx","components/GoBack/GoBack.jsx","page/MovieDetals/MovieDetals.jsx","services/movieAPI.js"],"sourcesContent":["import { IMG_URL } from 'services/movieAPI';\nimport PropTypes from 'prop-types';\n\nexport const MovieDetalComponent = ({ src, title, overview, genres }) => {\n\n    const elements = genres.map(genre => (\n        <li key={genre.id}><p className=\"card-text\">{genre.name}</p></li> \n       ));\n  return (\n    <>\n      <div className=\"card m-3 w-100 \">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <img src={`${IMG_URL}${src}`} className=\"rounded rounded-start w-75\" alt=\"1\" />\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">{title}</h3>\n              <h5 className=\"card-title\">Overview:</h5>\n              <p className=\"card-text\"> {overview}</p>    \n              <ul>{elements}</ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMovieDetalComponent.propTypes = { src: PropTypes.string,\n  title: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.array\n};","import { Link, useLocation } from 'react-router-dom';\n\nconst GoBack = () => {\n  const location = useLocation();\n  return <Link  className=\"btn btn-primary\" to={location.state?.from ?? '/'}>Go back</Link>;\n};\n\nexport default GoBack;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/movieAPI';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { MovieDetalComponent } from 'components/MovieDetalComponent/MovieDetalComponent';\nimport GoBack from 'components/GoBack/GoBack';\n\nexport const MovieDetals = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const movieDetals = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n        Notify.failed('No detals');\n      }\n    };\n\n    movieDetals();\n  }, [movieId]);\n\n// console.log(location);\n  return (\n    <>\n      <GoBack />\n      {movie && <MovieDetalComponent\n        src={movie.poster_path}\n        title={movie.title}\n        overview={movie.overview}\n        genres={movie.genres}\n      />}\n      <Link state={{ from: location.state?.from || location }} to=\"cast\">\n     \n      <button className=\"btn btn-outline-primary m-3\">Cast</button>\n      </Link>\n      <Link state={{ from: location.state?.from || location }} to=\"review\">\n        <button className=\"btn btn-outline-primary \">Reviews</button>\n      </Link>\n      <Suspense fallback={<p>Зробіть свій вибір</p>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n","import axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst movieService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '4bf39acf6ebeb7cbbfc54c4c8bc42fdc',\n  },\n});\n\nexport const getMovieTrending = async () => {\n  const { data } = await movieService.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieSearch  = async params => {\n  const { data } = await movieService.get('/search/movie', { params });\n  return data;\n};\n\nexport const getMovieDetails  = async id => {\n  const { data } = await movieService.get(`/movie/${id}` );\n  return data;\n};\n\nexport const getMovieCredits  = async id => {\n  const { data } = await movieService.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews  = async id => {\n  const { data } = await movieService.get(`/movie/${id}/reviews`);\n  return data;\n};"],"names":["MovieDetalComponent","src","title","overview","elements","genres","map","genre","className","name","id","IMG_URL","alt","location","useLocation","to","state","from","MovieDetals","useState","movie","setMovie","movieId","useParams","useEffect","movieDetals","getMovieDetails","data","console","log","Notify","poster_path","Suspense","fallback","movieService","axios","baseURL","params","api_key","getMovieTrending","get","getMovieSearch","getMovieCredits","getMovieReviews"],"sourceRoot":""}